<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.PatientMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.model.Patient" >
    <id column="patient_id" property="patientId" jdbcType="BIGINT" />
    <result column="patient_user" property="patientUser" jdbcType="CHAR" />
    <result column="patient_password" property="patientPassword" jdbcType="CHAR" />
    <result column="patient_mobile" property="patientMobile" jdbcType="CHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="address" property="address" jdbcType="CHAR" />
    <result column="patient_name" property="patientName" jdbcType="CHAR" />
    <result column="patient_gender" property="patientGender" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    patient_id, patient_user, patient_password, patient_mobile, birthday, address, patient_name, 
    patient_gender
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from patient
    where patient_id = #{patientId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from patient
    where patient_id = #{patientId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.Patient" >
    insert into patient (patient_id, patient_user, patient_password, 
      patient_mobile, birthday, address, 
      patient_name, patient_gender)
    values (#{patientId,jdbcType=BIGINT}, #{patientUser,jdbcType=CHAR}, #{patientPassword,jdbcType=CHAR}, 
      #{patientMobile,jdbcType=CHAR}, #{birthday,jdbcType=DATE}, #{address,jdbcType=CHAR}, 
      #{patientName,jdbcType=CHAR}, #{patientGender,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.Patient" >
    insert into patient
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="patientId != null" >
        patient_id,
      </if>
      <if test="patientUser != null" >
        patient_user,
      </if>
      <if test="patientPassword != null" >
        patient_password,
      </if>
      <if test="patientMobile != null" >
        patient_mobile,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="patientName != null" >
        patient_name,
      </if>
      <if test="patientGender != null" >
        patient_gender,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="patientId != null" >
        #{patientId,jdbcType=BIGINT},
      </if>
      <if test="patientUser != null" >
        #{patientUser,jdbcType=CHAR},
      </if>
      <if test="patientPassword != null" >
        #{patientPassword,jdbcType=CHAR},
      </if>
      <if test="patientMobile != null" >
        #{patientMobile,jdbcType=CHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="address != null" >
        #{address,jdbcType=CHAR},
      </if>
      <if test="patientName != null" >
        #{patientName,jdbcType=CHAR},
      </if>
      <if test="patientGender != null" >
        #{patientGender,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Patient" >
    update patient
    <set >
      <if test="patientUser != null" >
        patient_user = #{patientUser,jdbcType=CHAR},
      </if>
      <if test="patientPassword != null" >
        patient_password = #{patientPassword,jdbcType=CHAR},
      </if>
      <if test="patientMobile != null" >
        patient_mobile = #{patientMobile,jdbcType=CHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=CHAR},
      </if>
      <if test="patientName != null" >
        patient_name = #{patientName,jdbcType=CHAR},
      </if>
      <if test="patientGender != null" >
        patient_gender = #{patientGender,jdbcType=BIT},
      </if>
    </set>
    where patient_id = #{patientId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.Patient" >
    update patient
    set patient_user = #{patientUser,jdbcType=CHAR},
      patient_password = #{patientPassword,jdbcType=CHAR},
      patient_mobile = #{patientMobile,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=DATE},
      address = #{address,jdbcType=CHAR},
      patient_name = #{patientName,jdbcType=CHAR},
      patient_gender = #{patientGender,jdbcType=BIT}
    where patient_id = #{patientId,jdbcType=BIGINT}
  </update>
  <select id="selectByUsername" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from patient
    where patient_user = #{username,jdbcType=CHAR}
  </select>
</mapper>